name: Parse CI Config File
description: Action to parse model-config-tests configurations for CI tests
inputs:
  check:
    required: true
    description: Type of check/test to run (e.g. "reproducibility", "qa" or "scheduled")
  branch-or-tag:
    required: true
    description: Name of Git branch or tag to run CI testing on
  config-filepath:
    required: true
    description: Path to CI configuration file
outputs:
  model-config-tests-version:
    value: ${{ steps.read-config.outputs.model-config-tests-version }}
    description: A version of the model-config-tests package
  python-version:
    value: ${{ steps.read-config.outputs.python-version }}
    description: The python version used to create test virtual environment for local tests (e.g. QA tests)
  markers:
    value: ${{ steps.read-config.outputs.markers }}
    description: A python expression of markers to pass to model-config-tests pytests
  payu-version:
    value: ${{ steps.read-config.outputs.payu-version }}
    description: The payu version used to create test virtual environment for remote tests (e.g. repro tests)
runs:
  using: "composite" 
  steps:         
    - name: Read Configuration File
      shell: bash
      id: read-config
      run: |
        # Fall back to default config values if not defined for a given branch or tag
        output=$(jq --arg branch "${{ inputs.branch-or-tag }}" --arg check "${{ inputs.check }}" '
        {
          "model-config-tests-version": (
            .[$check][$branch]["model-config-tests-version"] //
            .[$check].default["model-config-tests-version"] // 
            .default["model-config-tests-version"]
          ),
          "python-version": (
            .[$check][$branch]["python-version"] // 
            .[$check].default["python-version"] // 
            .default["python-version"]
          ),
          "payu-version": (
            .[$check][$branch]["payu-version"] //
            .[$check].default["payu-version"] //
            .default["payu-version"]
          ),
          "markers": (
            .[$check][$branch].markers // 
            .[$check].default.markers //
            .default.markers
          ),
        }
        ' "${{ inputs.config-filepath }}")
        
        echo "markers=$(echo "$output" | jq -r '.["markers"]')" >> $GITHUB_OUTPUT
        echo "python-version=$(echo "$output" | jq -r '.["python-version"]')" >> $GITHUB_OUTPUT
        echo "payu-version=$(echo "$output" | jq -r '.["payu-version"]')" >> $GITHUB_OUTPUT
        echo "model-config-tests-version=$(echo "$output" | jq -r '.["model-config-tests-version"]')" >> $GITHUB_OUTPUT
