name: Initial Checksums
run-name: Initial Checksums for ${{ inputs.config-branch-name }}
on:
  workflow_call:
    inputs:
      config-branch-name:
        type: string
        required: true
        description: The configuration branch that will be run that will generate the checksums.
      commit-checksums:
        type: boolean
        required: true
        description: Whether to commit the checksums to the config branch once generated.
      committed-checksum-location:
        type: string
        required: false
        default: ./testing/checksum
        description: "If checksums are committed: Where in the repository the generated checksums should be committed to."
      committed-checksum-tag:
        type: string
        required: false
        description: "If checksums are committed: An optional tag to attach to the committed checksums."
      environment-name:
        type: string
        required: true
        description: The name of a GitHub Environment that is inherited from the caller.
      model-config-tests-version:
        type: string
        required: true
        description: A version of the model-config-tests package
      payu-version:
        type: string
        required: true
        description: The payu module version used to create test virtual environment
    outputs:
      artifact-name:
        value: ${{ jobs.repro-ci.outputs.artifact-name }}
        description: Name of the artifact containing the checksums and test report for this repro run
      artifact-url:
        value: ${{ jobs.repro-ci.outputs.artifact-url }}
        description: URL to the artifact containing the checksums and test report for this repro run
      experiment-location:
        value: ${{ jobs.repro-ci.outputs.experiment-location }}
        description: Location of the experiment on the target environment
jobs:
  repro-ci:
    name: Repro CI
    uses: access-nri/model-config-tests/.github/workflows/test-repro.yml@main
    with:
      config-ref: ${{ inputs.config-branch-name }}
      environment-name: ${{ inputs.environment-name }}
      test-markers: checksum
      model-config-tests-version: ${{ inputs.model-config-tests-version }}
      payu-version: ${{ inputs.payu-version }}
    secrets: inherit

  commit-checksum-to-branch:
    name: Commit Checksum To ${{ inputs.config-branch-name }}
    needs:
      - repro-ci
    if: inputs.commit-checksums
    runs-on: ubuntu-latest
    env:
      ARTIFACT_LOCAL_LOCATION: /opt/artifact
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.config-branch-name }}
          fetch-depth: 0
          token: ${{ secrets.GH_FORCE_PUSH_TOKEN }}

      - name: Download Checksums
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.repro-ci.outputs.artifact-name }}
          path: ${{ env.ARTIFACT_LOCAL_LOCATION }}

      - name: Move Checksums to Repo
        run: |
          mkdir -p ${{ inputs.committed-checksum-location }}
          cp --recursive --verbose ${{ env.ARTIFACT_LOCAL_LOCATION }}/*/* ${{ inputs.committed-checksum-location }}

      - name: Update version in metadata.yaml
        if: inputs.committed-checksum-tag != ''
        run: |
          full_tag=${{ inputs.committed-checksum-tag }}
          version=${full_tag/*-}
          yq -i ".version = \"${version}\"" metadata.yaml

      - name: Import Commit-Signing Key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4  # v6.1.0
        with:
          gpg_private_key: ${{ secrets.GH_ACTIONS_BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GH_ACTIONS_BOT_GPG_PASSPHRASE }}
          git_config_global: true
          git_committer_name: ${{ vars.GH_ACTIONS_BOT_GIT_USER_NAME }}
          git_committer_email: ${{ vars.GH_ACTIONS_BOT_GIT_USER_EMAIL }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Commit Checksums to Repo
        run: |
          git add .
          git commit -m "Added initial checksums generated from ${{ inputs.config-branch-name }}"
          git push
          echo "::notice::Committed and pushed checksums generated from ${{ inputs.config-branch-name }}"

      - name: Tag Checksums in Repo
        if: inputs.committed-checksum-tag != ''
        env:
          STATUS: ${{ endsWith(inputs.committed-checksum-tag, '.0') && 'breaking' || 'preserving' }}
        run: |
          git tag ${{ inputs.committed-checksum-tag }} -m "Repro-${{ env.STATUS }} update to ${{ inputs.config-branch-name }} via model-config-tests 'generate-checksums.yml' workflow."
          git push --tags
          echo "::notice::Pushed new tag ${{ inputs.committed-checksum-tag }}"

      - name: Create Release
        if: inputs.committed-checksum-tag != ''
        env:
          TAG: ${{ inputs.committed-checksum-tag }}
          IS_REPRO_BREAK: ${{ endsWith(inputs.committed-checksum-tag, '.0') && 'DOES' || 'does not' }}
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844  #v0.1.15
        with:
          tag_name: ${{ env.TAG }}
          name: Configuration ${{ env.TAG }}
          body: |
            This released configuration ${{ env.IS_REPRO_BREAK }} break reproducibility with released configurations before it. See the 'Config Tags' section in the `README.md` for more information.
          generate_release_notes: true
