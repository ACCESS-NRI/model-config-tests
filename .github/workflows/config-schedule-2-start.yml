name: Scheduled Checks - Branch Specific
on:
  workflow_call:
    inputs:
      config-tag:
        type: string
        required: true
        description: Tag associated with a config branch that is used in the reproducibility run
jobs:
  config:
    name: Read CI Testing Configuration
    runs-on: ubuntu-latest
    outputs:
      markers: ${{ steps.scheduled-config.outputs.markers }}
      payu-version: ${{ steps.scheduled-config.outputs.payu-version }}
      model-config-tests-version: ${{ steps.scheduled-config.outputs.model-config-tests-version }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Validate `config/ci.json`
        uses: access-nri/schema/.github/actions/validate-with-schema@main
        with:
          schema-version: ${{ vars.CI_JSON_SCHEMA_VERSION }}
          meta-schema-version: draft-2020-12
          schema-location: au.org.access-nri/model/configuration/ci
          data-location: config/ci.json

      - name: Read scheduled tests config
        id: scheduled-config
        uses: access-nri/model-config-tests/.github/actions/parse-ci-config@main
        with:
          check: scheduled
          branch-or-tag: ${{ inputs.config-tag }}
          config-filepath: "config/ci.json"

  repro-ci:
    # Run the given config on the deployment Github Environment (`environment-name`) and upload
    # the test results and checksum.
    needs:
      - config
    uses: access-nri/model-config-tests/.github/workflows/test-repro.yml@main
    with:
      # FIXME: Make the environment name an input of some kind - what if we deploy to a different supercomputer?
      environment-name: Gadi
      config-ref: ${{ inputs.config-tag }}
      compared-config-ref: ${{ inputs.config-tag }}
      test-markers: ${{ needs.config.outputs.markers }}
      model-config-tests-version: ${{ needs.config.outputs.model-config-tests-version }}
      payu-version: ${{ needs.config.outputs.payu-version }}
    secrets: inherit
    permissions:
      contents: write

  check-checksum:
    name: Check Repro Results
    # Parse the test results
    needs:
      - repro-ci
    runs-on: ubuntu-latest
    permissions:
      checks: write
    env:
      TESTING_LOCAL_LOCATION: /opt/testing
    outputs:
      # URL for the parsed test results
      check-run-url: ${{ steps.results.outputs.check-url }}
      # Overall result of the checksum repro CI - `pass` (if reproducible), `fail` otherwise
      result: ${{ steps.results.outputs.result }}
    steps:
      - name: Download Newly Created Checksum
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.repro-ci.outputs.artifact-name }}
          path: ${{ env.TESTING_LOCAL_LOCATION }}

      - name: Parse Test Report
        id: tests
        uses: EnricoMi/publish-unit-test-result-action/composite@e780361cd1fc1b1a170624547b3ffda64787d365  #v2.12.0
        with:
          files: ${{ env.TESTING_LOCAL_LOCATION }}/testing/checksum/test_report.xml
          comment_mode: off
          check_run: true
          compare_to_earlier_commit: false
          report_individual_runs: true
          report_suite_logs: any

      - name: Checksum Tests Results
        id: results
        run: |
          echo "check-url=${{ fromJson(steps.tests.outputs.json).check_url }}" >> $GITHUB_OUTPUT

          if (( ${{ fromJson(steps.tests.outputs.json).stats.tests_fail }} > 0 )); then
            echo "result=fail" >> $GITHUB_OUTPUT
          else
            echo "result=pass" >> $GITHUB_OUTPUT
          fi

  failed-repro:
    name: Failed Reproduction Notifier
    needs:
      - repro-ci
      - check-checksum
    if: failure() || needs.check-checksum.outputs.result == 'fail'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Setup Issue Variables
        id: variables
        run: |
          config=${{ github.event.repository.name }}
          echo "config=$config" >> $GITHUB_OUTPUT
          echo "config-url=https://github.com/ACCESS-NRI/$config" >> $GITHUB_OUTPUT
          # model is just the config repo name without the '-configs' bit, so split it below with bash param expansion
          model=${config%-*}
          echo "model=$model" >> $GITHUB_OUTPUT
          echo "model-url=https://github.com/ACCESS-NRI/$model" >> $GITHUB_OUTPUT
          echo "tag-url=https://github.com/ACCESS-NRI/$config/releases/tag/${{ inputs.config-tag }}" >> GITHUB_OUTPUT
          echo "run-url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT

          cat $GITHUB_OUTPUT

      - name: Create issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          BODY: |
            There was a failure of a monthly reproducibility check on `${{ github.repository }}`.

            Model: `${{ steps.variables.outputs.model }}`, found here: ${{ steps.variables.outputs.model-url }}
            Config Repo: `${{ steps.variables.outputs.config }}`, found here: ${{ steps.variables.outputs.config-url }}
            Config Tag Tested for Reproducibility: `${{ inputs.config-tag }}`, found here: ${{ steps.variables.outputs.tag-url }}
            Failed Run Log: ${{ steps.variables.outputs.run-url }}
            Experiment Location (Gadi): `${{ needs.repro-ci.outputs.experiment-location }}`
            Checksums created: In the `testing/checksum` directory of ${{ needs.repro-ci.outputs.artifact-url }}
            Checksums compared against: ${{ format('{0}/{1}/tree/{2}/testing/checksum', github.server_url, github.repository, inputs.config-tag) }}

            Tagging @ACCESS-NRI/model-release
        run: |
          gh issue create \
            --title 'Scheduled Repro Check Failed for Config `${{ inputs.config-tag }}`' \
            --label "type:repro-fail,priority:blocker" \
            --body '${{ env.BODY }}'
