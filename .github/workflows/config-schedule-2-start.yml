name: Scheduled Checks - Branch Specific
on:
  workflow_call:
    inputs:
      config-ref:
        type: string
        required: true
        description: Tag or branch of a configuration used for the scheduled checks
jobs:
  config:
    name: Read CI Testing Configuration
    runs-on: ubuntu-latest
    outputs:
      markers: ${{ steps.scheduled-config.outputs.markers }}
      payu-version: ${{ steps.scheduled-config.outputs.payu-version }}
      model-config-tests-version: ${{ steps.scheduled-config.outputs.model-config-tests-version }}
      config-hash: ${{ steps.config-hash.outputs.config-hash }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Validate `config/ci.json`
        uses: access-nri/schema/.github/actions/validate-with-schema@main
        with:
          schema-version: ${{ vars.CI_JSON_SCHEMA_VERSION }}
          meta-schema-version: draft-2020-12
          schema-location: au.org.access-nri/model/configuration/ci
          data-location: config/ci.json

      - name: Read scheduled tests config
        id: scheduled-config
        uses: access-nri/model-config-tests/.github/actions/parse-ci-config@main
        with:
          check: scheduled
          branch-or-tag: ${{ inputs.config-ref }}
          config-filepath: "config/ci.json"

      - name: Set config hash
        id: config-hash
        run: |
          # Find latest commit hash for the given config branch or tag
          config_hash=$(git rev-parse ${{ inputs.config-ref }})

  repro-ci:
    # Run the given config on the deployment Github Environment (`environment-name`) and upload
    # the test results and checksum.
    needs:
      - config
    uses: access-nri/model-config-tests/.github/workflows/test-repro.yml@main
    with:
      # FIXME: Make the environment name an input of some kind - what if we deploy to a different supercomputer?
      environment-name: Gadi
      config-hash: ${{ needs.config.outputs.config-hash }}
      config-ref: ${{ inputs.config-ref }}
      compared-config-ref: ${{ inputs.config-ref }}
      test-markers: ${{ needs.config.outputs.markers }}
      model-config-tests-version: ${{ needs.config.outputs.model-config-tests-version }}
      payu-version: ${{ needs.config.outputs.payu-version }}
    secrets: inherit
    permissions:
      contents: write
      checks: write

  failed-repro:
    name: Failed Reproduction Notifier
    needs:
      - repro-ci
      - config
    if: failure() || needs.repro-ci.outputs.result == 'fail'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Setup Issue Variables
        id: variables
        run: |
          config=${{ github.event.repository.name }}
          echo "config=$config" >> $GITHUB_OUTPUT
          echo "config-url=https://github.com/ACCESS-NRI/$config" >> $GITHUB_OUTPUT
          # model is just the config repo name without the '-configs' bit, so split it below with bash param expansion
          model=${config%-*}
          echo "model=$model" >> $GITHUB_OUTPUT
          echo "model-url=https://github.com/ACCESS-NRI/$model" >> $GITHUB_OUTPUT
          echo "ref-url=${{ github.server_url }}/${{ github.repository }}/tree/${{ needs.config.outputs.config-hash }}" >> $GITHUB_OUTPUT
          echo "run-url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT

          cat $GITHUB_OUTPUT

      - name: Create issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          BODY: |
            There was a failure of the scheduled reproducibility check on `${{ github.repository }}`.

            Model: `${{ steps.variables.outputs.model }}`, found here: ${{ steps.variables.outputs.model-url }}
            Config Repo: `${{ steps.variables.outputs.config }}`, found here: ${{ steps.variables.outputs.config-url }}
            Config Ref Tested for Reproducibility: `${{ inputs.config-ref }}`, found here: ${{ steps.variables.outputs.ref-url }}
            Failed Run Log: ${{ steps.variables.outputs.run-url }}
            Experiment Location (Gadi): `${{ needs.repro-ci.outputs.experiment-location }}`
            Checksums created: In the `testing/checksum` directory of ${{ needs.repro-ci.outputs.artifact-url }}
            Checksums compared against: ${{ steps.variables.outputs.ref-url }}/testing/checksum

            Tagging @ACCESS-NRI/model-release
        run: |
          # Create tags for the issue if they don't already exist
          gh label create 'type:repro-fail' --description 'Repro check failure' --color 000000 || true
          gh label create 'priority:blocker' --color B60205 || true

          gh issue create \
            --title 'Scheduled Repro Check Failed for Config `${{ inputs.config-ref }}`' \
            --label "type:repro-fail,priority:blocker" \
            --body '${{ env.BODY }}'
